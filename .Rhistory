<<<<<<< Updated upstream
=======
knitr::opts_chunk$set(echo = TRUE)
<<<<<<< Updated upstream
=======
mapview(df_map_DC_sf, main="Map for Accidents in DC(2021)" ,xcol = "Start_Lng", ycol = "Start_Lat", grid = FALSE,col.regions=("red"))
knitr::opts_chunk$set(echo = TRUE)
>>>>>>> Stashed changes
library(tidyverse)
library(dplyr)
library(corrplot)
library(mapview)
library(tigris)
library(sf)
library(ggplot2)
library(lubridate)
library(ezids)
df_us_acc <- data.frame(read.csv('../us_accidents_dataset/US_Accidents_Dec21_updated.csv'))
str(df_us_acc)
(colMeans(is.na(df_us_acc)))*100
df_us_acc$year<-format(as.Date(df_us_acc$Start_Time, format="%Y-%m-%d"),"%Y")
head(df_us_acc)
<<<<<<< Updated upstream
=======
(colMeans(is.na(df_us_acc)))*100
df_us_acc$year<-format(as.Date(df_us_acc$Start_Time, format="%Y-%m-%d"),"%Y")
head(df_us_acc)
>>>>>>> Stashed changes
ggplot(df_us_acc, aes(x = year, fill=year)) +
geom_bar()
accidents_2021 <- subset(df_us_acc, year==2021)
head(accidents_2021)
accidents_2021$month<-format(as.Date(accidents_2021$Start_Time, format="%Y-%m-%d"),"%m")
head(accidents_2021)
<<<<<<< Updated upstream
accidents_2021<-subset(accidents_2021, select = -c(Number, ID, Description))
(colMeans(is.na(accidents_2021)))*100
=======
(colMeans(is.na(accidents_2021)))*100
accidents_2021<-subset(accidents_2021, select = -c(Number, ID, Description))
>>>>>>> Stashed changes
accidents_2021 <- accidents_2021 %>%
mutate(Is_severe = if_else(Severity == 1 | Severity ==2 , "Not Severe", "Severe"))
accidents_2021  %>%
summarise_all(list(~is.na(.)))%>%
pivot_longer(everything(),
names_to = "variables", values_to="missing") %>%
count(variables, missing) %>%
ggplot(aes(y=variables,x=n,fill=missing))+
geom_col()
clean_acc21 <- drop_na(accidents_2021)
clean_acc21$Is_severe <- as.factor(clean_acc21$Is_severe) # make Is_severe as factor
str(clean_acc21)
<<<<<<< Updated upstream
clean_acc21 %>%
group_by(Amenity, Bump, Crossing, Give_Way, Junction, No_Exit, Railway, Roundabout, Station, Stop, Traffic_Calming, Traffic_Signal, Turning_Loop)%>%
summarise(percentage = n()/nrow(clean_acc21) *100 )%>%
arrange(-percentage) %>%
filter(percentage > 1) -> accidents_per_roadelement
head(accidents_per_roadelement)
acc_road_element_per <- tibble(c("None", "Junction","Crossing", "Traffic signal", "Crossing and traffic signal", "Station", "Stop" ), pull(accidents_per_roadelement, percentage), .name_repair = ~ c("road_elements", "percentage"))
acc_road_element_per
options(repr.plot.width = 20, repr.plot.height = 8)
acc_road_element_per %>%
ggplot() +
geom_col(mapping = aes(x=reorder(road_elements, -percentage), y=percentage, fill = road_elements)) +
labs(x = "Road element", y="%", title ="Accidents by nearby road element") +
theme(text = element_text(size=8))
accidents_per_roadelement<-clean_acc21 %>%
select(Is_severe,Junction,Crossing,Stop,Station,Traffic_Signal)
head(accidents_per_roadelement)
Junction_data<- subset(accidents_per_roadelement, Junction=="True",
select=c(Is_severe,Junction))
head(Junction_data)
ggplot(data=Junction_data, aes(x=Is_severe, y=Junction, fill=Is_severe)) +
geom_bar(stat="identity")
Crossing_data<- subset(accidents_per_roadelement, Crossing=="True",
select=c(Is_severe,Crossing))
head(Crossing_data)
ggplot(data=Crossing_data, aes(x=Is_severe, y=Crossing, fill=Is_severe)) +
geom_bar(stat="identity")
Stop_data<- subset(accidents_per_roadelement, Stop=="True",
select=c(Is_severe,Stop))
head(Stop_data)
ggplot(data=Stop_data, aes(x=Is_severe, y=Stop, fill=Is_severe)) +
geom_bar(stat="identity")
Station_data<- subset(accidents_per_roadelement, Station=="True",
select=c(Is_severe,Station))
head(Station_data)
ggplot(data=Station_data, aes(x=Is_severe, y=Station, fill=Is_severe)) +
geom_bar(stat="identity")
Traffic_Signal_data<- subset(accidents_per_roadelement, Traffic_Signal=="True",
select=c(Is_severe,Traffic_Signal))
head(Traffic_Signal_data)
ggplot(data=Traffic_Signal_data, aes(x=Is_severe, y=Traffic_Signal, fill=Is_severe)) +
geom_bar(stat="identity")
accidents_per_roadelement <- accidents_per_roadelement %>%
mutate(severe_num = if_else(Is_severe== "Severe", 1, 0))
accidents_per_roadelement <- accidents_per_roadelement %>%
mutate(Crossing_num = if_else(Crossing== "True", 1, 0))
accidents_per_roadelement <- accidents_per_roadelement %>%
mutate(Stop_num = if_else(Stop== "True", 1, 0))
accidents_per_roadelement <- accidents_per_roadelement %>%
mutate(Station_num = if_else(Station== "True", 1, 0))
accidents_per_roadelement <- accidents_per_roadelement %>%
mutate(Traffic_Signal_num = if_else(Traffic_Signal== "True", 1, 0))
accidents_per_roadelement <- accidents_per_roadelement %>%
mutate(Junction_num = if_else(Junction== "True", 1, 0))
Junction_anova = aov(Junction_num~severe_num, data=accidents_per_roadelement)
summary(Junction_anova)
Crossing_anova = aov(Crossing_num~severe_num, data=accidents_per_roadelement)
summary(Crossing_anova)
Stop_anova = aov(Stop_num~severe_num, data=accidents_per_roadelement)
summary(Stop_anova)
Station_anova = aov(Station_num~severe_num, data=accidents_per_roadelement)
summary(Station_anova)
Traffic_signal_anova = aov(Traffic_Signal_num~severe_num, data=accidents_per_roadelement)
summary(Traffic_signal_anova)
test_Hour <- chisq.test(table(clean_acc21$Severity, clean_acc21$Hour))
ggplot(data=Junction_data, aes(x=Is_severe, y=Junction, fill=Is_severe)) +
geom_bar(stat="identity")+
labs(x = "Severity", y="Junction", title ="Accidents by Junction") +
theme(text = element_text(size=8))
ggplot(data=Crossing_data, aes(x=Is_severe, y=Crossing, fill=Is_severe)) +
geom_bar(stat="identity")+
labs(x = "Severity", y="Crossing", title ="Accidents by Crossing") +
theme(text = element_text(size=8))
ggplot(data=Stop_data, aes(x=Is_severe, y=Stop, fill=Is_severe)) +
geom_bar(stat="identity")+
labs(x = "Severity", y="Stop", title ="Accidents by Stop") +
theme(text = element_text(size=8))
ggplot(data=Station_data, aes(x=Is_severe, y=Station, fill=Is_severe)) +
geom_bar(stat="identity")+
labs(x = "Severity", y="Station", title ="Accidents by Stop") +
theme(text = element_text(size=8))
ggplot(data=Traffic_Signal_data, aes(x=Is_severe, y=Traffic_Signal, fill=Is_severe)) +
geom_bar(stat="identity")+
labs(x = "Severity", y="Traffic Signal", title ="Accidents by Traffic Signal") +
theme(text = element_text(size=8))
ggplot(data=Junction_data, aes(x=Is_severe, y=Junction, fill=Is_severe)) +
geom_bar(stat="identity")+
labs(title="Accidents By Junction", x="Severity", y = "Junction")+
theme(plot.title = element_text(hjust = 0.5))
ggplot(data=Crossing_data, aes(x=Is_severe, y=Crossing, fill=Is_severe)) +
geom_bar(stat="identity")+
labs(title="Accidents By Crossing", x="Severity", y = "Crossing")+
theme(plot.title = element_text(hjust = 0.5))
ggplot(data=Stop_data, aes(x=Is_severe, y=Stop, fill=Is_severe)) +
geom_bar(stat="identity")+
labs(title="Accidents By Stop", x="Severity", y = "Stop")+
theme(plot.title = element_text(hjust = 0.5))
ggplot(data=Station_data, aes(x=Is_severe, y=Station, fill=Is_severe)) +
geom_bar(stat="identity")+
labs(title="Accidents By Station", x="Severity", y = "Station")+
theme(plot.title = element_text(hjust = 0.5))
ggplot(data=Traffic_Signal_data, aes(x=Is_severe, y=Traffic_Signal, fill=Is_severe)) +
geom_bar(stat="identity")+
labs(title="Accidents By Traffic Signal", x="Severity", y = "Traffic Sisgnal")+
theme(plot.title = element_text(hjust = 0.5))
options(repr.plot.width = 20, repr.plot.height = 8)
acc_road_element_per %>%
ggplot() +
geom_col(mapping = aes(x=reorder(road_elements, -percentage), y=percentage, fill = road_elements)) +
labs(title="Accidents By Nearby road elements", x="Road Elements", y = "Percentage")+
theme(plot.title = element_text(hjust = 0.5))
options(repr.plot.width = 20, repr.plot.height = 8)
acc_road_element_per %>%
ggplot() +
geom_bar(mapping = aes(x=reorder(road_elements, -percentage), y=percentage, fill = road_elements)) +
labs(title="Accidents By Nearby road elements", x="Road Elements", y = "Percentage")+
theme(plot.title = element_text(hjust = 0.5))
options(repr.plot.width = 20, repr.plot.height = 8)
acc_road_element_per %>%
ggplot() +
geom_col(mapping = aes(x=reorder(road_elements, -percentage), y=percentage, fill = road_elements)) +
labs(title="Accidents By Nearby road elements", x="Road Elements", y = "Percentage")+
theme(plot.title = element_text(hjust = 0.5))
options(repr.plot.width = 20, repr.plot.height = 8)
acc_road_element_per %>%
ggplot() +
geom_col(mapping = aes(x=reorder(road_elements, -percentage), y=percentage, fill = road_elements),position = position_dodge(width=0.5)) +
labs(title="Accidents By Nearby road elements", x="Road Elements", y = "Percentage")+
theme(plot.title = element_text(hjust = 0.5))
options(repr.plot.width = 20, repr.plot.height = 8)
acc_road_element_per %>%
ggplot() +
geom_col(mapping = aes(x=reorder(road_elements, -percentage), y=percentage, fill = road_elements),position = position_dodge(width=0.8)) +
labs(title="Accidents By Nearby road elements", x="Road Elements", y = "Percentage")+
theme(plot.title = element_text(hjust = 0.5))
options(repr.plot.width = 20, repr.plot.height = 8)
acc_road_element_per %>%
ggplot() +
geom_col(mapping = aes(x=reorder(road_elements, -percentage), y=percentage, fill = road_elements),position = position_dodge(width=2)) +
labs(title="Accidents By Nearby road elements", x="Road Elements", y = "Percentage")+
theme(plot.title = element_text(hjust = 0.5))
options(repr.plot.width = 25, repr.plot.height = 8)
acc_road_element_per %>%
ggplot() +
geom_col(mapping = aes(x=reorder(road_elements, -percentage), y=percentage, fill = road_elements)) +
labs(title="Accidents By Nearby road elements", x="Road Elements", y = "Percentage")+
theme(plot.title = element_text(hjust = 0.5))
options(repr.plot.width = 30, repr.plot.height = 8)
acc_road_element_per %>%
ggplot() +
geom_col(mapping = aes(x=reorder(road_elements, -percentage), y=percentage, fill = road_elements)) +
labs(title="Accidents By Nearby road elements", x="Road Elements", y = "Percentage")+
theme(plot.title = element_text(hjust = 0.5))
options(repr.plot.width = 30, repr.plot.height = 8)
acc_road_element_per %>%
ggplot() +
geom_col(mapping = aes(x=reorder(road_elements, -percentage), y=percentage, fill = road_elements)) +
labs(title="Accidents By Nearby road elements", x="Road Elements", y = "Percentage")+
theme(plot.title = element_text(hjust = 0.5))
options(repr.plot.width = 30, repr.plot.height = 8)
acc_road_element_per %>%
ggplot() +
geom_col(mapping = aes(x=reorder(road_elements, -percentage), y=percentage, fill = road_elements)) +
labs(title="Accidents By Nearby road elements", x="Road Elements", y = "Percentage")+
theme(plot.title = element_text(hjust = 0.5))
acc_road_element_per <- tibble(c("None", "Junction","Crossing", "Traffic signal", "Crossing and traffic signal", "Station", "Stop" ), pull(accidents_per_roadelement, percentage), .name_repair = ~ c("road_elements", "percentage"))
acc_road_element_per <- tibble(c("None", "Junction","Crossing", "Traffic signal", "Crossing and traffic signal", "Station", "Stop" ), pull(accidents_per_roadelement, percentage), .name_repair = ~ c("road_elements", "percentage"))
clean_acc21 %>%
group_by(Amenity, Bump, Crossing, Give_Way, Junction, No_Exit, Railway, Roundabout, Station, Stop, Traffic_Calming, Traffic_Signal, Turning_Loop)%>%
summarise(percentage = n()/nrow(clean_acc21) *100 )%>%
arrange(-percentage) %>%
filter(percentage > 1) -> accidents_per_roadelement
head(accidents_per_roadelement)
acc_road_element_per <- tibble(c("None", "Junction","Crossing", "Traffic signal", "Crossing and traffic signal", "Station", "Stop" ), pull(accidents_per_roadelement, percentage), .name_repair = ~ c("road_elements", "percentage"))
acc_road_element_per
options(repr.plot.width = 30, repr.plot.height = 8)
acc_road_element_per %>%
ggplot() +
geom_col(mapping = aes(x=reorder(road_elements, -percentage), y=percentage, fill = road_elements)) +
labs(title="Accidents By Nearby road elements", x="Road Elements", y = "Percentage")+
=======
clean_acc21  %>%
summarise_all(list(~is.na(.)))%>%
pivot_longer(everything(),
names_to = "variables", values_to="missing") %>%
count(variables, missing) %>%
ggplot(aes(y=variables,x=n,fill=missing))+
geom_col()
us_date<-clean_acc21$Start_Time
us_date_formatted<- as.Date(us_date,format="%Y-%m-%d")
clean_acc21$Month<-as.numeric(format(us_date_formatted, "%m"))
us_time<- clean_acc21$Start_Time
clean_acc21$Hour<-hour(us_time)
ggplot(clean_acc21, aes(x = month, fill=month)) +
geom_bar()
ggplot(clean_acc21, aes(x = Hour, fill=as.factor(Hour))) +
geom_bar()
us_time<- accidents_2021$Start_Time
us_time_formatted<-hour(us_time)
hist(us_time_formatted)
df_map<-dplyr::select(clean_acc21, State, Start_Lat, Start_Lng)
head(df_map)
df_map_DC <- df_map %>% filter(State == "DC")
df_map_DC %>% glimpse()
df_map_DC_sf <- st_as_sf(df_map_DC, coords = c("Start_Lng", "Start_Lat"), crs = 4326)
mapview(df_map_DC_sf, main="Map for Accidents in DC(2021)" ,xcol = "Start_Lng", ycol = "Start_Lat", grid = FALSE,col.regions=("red"))
mapview(df_map_DC_sf, map.types = "Stamen.Toner",col.regions=("red"))
hist(clean_acc21$Hour)
hist(clean_acc21$Hour,main="Histogram for Hours",xlab = "Hours")
ggplot(clean_acc21, aes(x = month, fill=month, main="Bar graph for frequency of accident in Months")) +
geom_bar()
ggplot(clean_acc21, aes(x = Hour, fill=as.factor(Hour)), main="Bar graph for frequency of accident in Hours") +
geom_bar()
ggplot(clean_acc21, aes(x = month, fill=month,)) +geom_bar()+labs(title="Accident Distribution over the Months in 2021", x="Months", y = "count")+
theme(plot.title = element_text(hjust = 0.5))
ggplot(clean_acc21, aes(x = Hour, fill=as.factor(Hour))) + geom_bar()+
labs(title="Accident Distribution in Hours ", x="Hours", y = "count")+
>>>>>>> Stashed changes
theme(plot.title = element_text(hjust = 0.5))
>>>>>>> Stashed changes
